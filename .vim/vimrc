scriptencoding utf-8
set encoding=utf-8

" LEADER Set leader as easily accessible for both hands
nnoremap <SPACE> <Nop>
let mapleader=' '

" Vim-Plug
source ~/.vim/vimplugrc.vim

"" ENABLE LOADING FILETYPE AND INDENTATION PLUGINS
filetype plugin on
filetype indent on

"""" MAPINGS

" Normal Mode( [t]o [n]ormal )
imap tn <Esc>

" Move up and down logical lines when text is wrapped
nnoremap j gj
nnoremap k gk

"jump to errors
nnoremap ]r :ALENext<CR>
nnoremap [r :ALEPrevious<CR>
map <leader>at :ALEToggle<CR>

" Allignemnt
xmap ga <Plug>(EasyAlign)
nmap ga <Plug>(EasyAlign)

" Quicker window movement
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l

"Move UP/Down in all modes
nnoremap [e :m .-2<CR>
nnoremap ]e :m .+1<CR>
vnoremap [e :m '<-2<CR>gv
vnoremap ]e :m '>+1<CR>gv

"Buffers
nmap [b :bprevious<CR>
nmap ]b :bnext<CR>

"FzF
nnoremap <Leader>b :Buffers<CR>
nmap <Leader>f :Files<CR>
nmap <Leader>t :Tags<CR>

"Map Ctrl + S to save in any mode
noremap <silent> <C-s>          :update<CR>
vnoremap <silent> <C-s>         <C-C>:update<CR>
inoremap <silent> <C-s>         <C-O>:update<CR>

"quit quickly
nnoremap <leader>q :q<CR>j
nnoremap <leader>qa <ESC>:qa!<CR>                     "quit without saving

"Easily edit files in the same directory
nnoremap <leader>e :e <C-R>=expand('%:p:h') . '/'<CR>

"Open Explorer
nnoremap <leader>n :Explore<CR>

"Clear line
nnoremap <Leader>cl 0D

"" END MAPPINGS

"" ULTISNIP
" Trigger configuration. Do not use <tab> if you use https://github.com/Valloric/YouCompleteMe.
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<c-u>"
let g:UltiSnipsJumpBackwardTrigger="<c-i>"
let g:UltiSnipsEditSplit="vertical"
let g:UltiSnipsSnippetDirectories=['~/.vim/UltiSnips/', 'UltiSnips']

"" COLORS
syntax enable
set background=dark
colorscheme solarized
highlight Normal ctermbg=black

"" EDITOR SETTINGS
set spell spelllang=en_us
hi clear SpellBad
hi SpellBad cterm=undercurl
set number
set ruler
set hidden
set showcmd "show character count

"Undo history between sessions
if v:version >= 703
	set undofile
	set undodir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
endif
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
" If we backup temporary files often automated editing tools like the crontab
" editor get confused
set backupskip=/tmp/*,/private/tmp/*"
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
"column 100
set colorcolumn=+1
hi ColorColumn ctermbg=lightgrey guibg=lightgrey
set cc=100                                        "Make it obvious where 100 characters is

"Tabs, Spaces  and Indentation
set autoindent
set sts=0 sw=4 ts=4
set list
set listchars=tab:→\ ,extends:›,precedes:‹,nbsp:·,trail:·
set tabstop=4  "four spaces will make up for one tab
set noexpandtab  "tell vim to keep tabs instead of inserting spaces
retab            "let vim handle your case
autocmd BufWinEnter,BufReadPre * setlocal conceallevel=2 concealcursor=nv
autocmd BufWinEnter,BufReadPre * syn match LeadingSpace /\(^ *\)\@<= / containedin=ALL conceal cchar=·

set undofile

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

augroup qf
    autocmd!
    autocmd FileType qf set nobuflisted
augroup END

"Split navigation
set splitbelow                                "open new horizontal splits below
set splitright                                "open new vertical splits rigth

"Airline
set laststatus=2
let g:airline#extensions#bufferline#enabled = 0
let g:airline_section_z = ''
let g:airline_section_y = ''
let g:airline_section_c = '%f'
let g:airline_theme='papercolor'
let g:airline_detect_spell=0
let g:airline#extensions#tabline#formatter = 'short_path'

"" SEARCH
set hlsearch
nnoremap <Leader>cs :nohlsearch<cr>
nnoremap <silent> [q :cprev<cr>
nnoremap <silent> ]q :cnext<cr>
set ignorecase
set smartcase
set incsearch

"Ack grepping using ag
cnoreabbrev Ack Ack!
nnoremap <Leader>g :Ack!<Space>
if executable('ag')
	  let g:ackprg = 'ag --vimgrep'
endif
"" END SEARCH


"Remove all trailing spaes on save
autocmd FileType c,html,css,js,php autocmd BufWritePre <buffer> %s/\s\+$//e

"VIM wiki
autocmd BufWinEnter *.wiki set cc=1000 "Wiki should not be bothered column on the right
nnoremap <silent> <leader>sl ?==<cr>2jV}k:sort!<cr>:nohls<cr>
nnoremap <silent> <leader>ll I-<space>[<space>]<space><esc>
vnoremap <silent> <leader>ll <C-v>I-<space>[<space>]<space><esc>
nnoremap <silent> <leader>li I-<space><esc>
let g:vimwiki_url_maxsave=0
nnoremap <leader>rn vip:RenumberSelection<CR>
let g:vimwiki_list = [{'syntax': 'markdown', 'ext': '.md'},{'path': '~/Documents/Automattic/','syntax': 'markdown', 'ext': '.md'}]

"Copy/Pasting
set clipboard^=unnamed,unnamedplus

"Netrw - Vims default directory viewer
let g:netrw_men=0

"ALE
let g:ale_open_list = 0
let g:ale_php_phpcs_standard='WordPress'

"AutoSave plugin
let g:auto_save = 1  " enable AutoSave on Vim startupc
let g:auto_save_no_updatetime = 1  " do not change the 'updatetime' option
let g:auto_save_in_insert_mode = 0  " do not save while in insert mode

"Rust
let g:rustfmt_autosave = 1

"""" FUNCTIONS

"ZSH in VIM
function! SetShell()
   if filereadable("/usr/local/bin/zsh")
       set shell=/usr/local/bin/zsh
   endif
endfunction
call SetShell()
